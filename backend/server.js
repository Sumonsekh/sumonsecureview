// ЁЯФР .env ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржЧрзЛржкржи рждржерзНржп ржирж┐рждрзЗ ржЪрж╛ржЗ
require("dotenv").config();

// ЁЯзй ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржкрзНржпрж╛ржХрзЗржЬ ржЗржоржкрзЛрж░рзНржЯ ржХрж░ржЫрж┐
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const Content = require("./models/Content"); // MongoDB ржоржбрзЗрж▓

const app = express();

// ЁЯФз Middleware ржЧрзБрж▓рзЛ
app.use(cors());
app.use(express.json());

// ЁЯМР MongoDB URI (ржПржЯрж╛ .env ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржЖрж╕ржмрзЗ)
mongoose
  .connect(process.env.MONGODB_URI)
  .then(() => console.log("тЬЕ MongoDB Connected"))
  .catch((err) => console.error("тЭМ MongoDB Error:", err));

// ЁЯУд ржХржиржЯрзЗржирзНржЯ ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ API
app.post("/api/upload", async (req, res) => {
  const { type, content, accessId } = req.body;

  try {
    const newContent = new Content({ type, content, accessId });
    await newContent.save();
    res.status(201).json({ message: "тЬЕ ржХржиржЯрзЗржирзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкрж▓рзЛржб рж╣рзЯрзЗржЫрзЗ" });
  } catch (err) {
    res.status(500).json({ error: "тЭМ ржЖржкрж▓рзЛржб ржмрзНржпрж░рзНрже рж╣рзЯрзЗржЫрзЗ" });
  }
});

// ЁЯСБя╕ПтАНЁЯЧия╕П ржХржиржЯрзЗржирзНржЯ ржнрж┐ржЙ ржХрж░рж╛рж░ API (ржПржХржмрж╛рж░ ржжрзЗржЦрж╛рж░ ржкрж░ ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗ ржпрж╛ржмрзЗ)
app.get("/api/view/:accessId", async (req, res) => {
  const { accessId } = req.params;

  try {
    const content = await Content.findOneAndDelete({ accessId });

    if (!content) {
      return res.status(404).json({ error: "ЁЯШв ржХржиржЯрзЗржирзНржЯ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ ржмрж╛ ржЖржЧрзЗржЗ ржжрзЗржЦрж╛ рж╣рзЯрзЗржЫрзЗ" });
    }

    res.status(200).json(content);
  } catch (err) {
    res.status(500).json({ error: "тЭМ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ, ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи" });
  }
});

// ЁЯЪА рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`ЁЯЪА рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж▓ржЫрзЗ PORT ${PORT} ржП`));
